// todo Add swarm tests for top scenarios, including the scalar at root level scenario.
// todo Create a new language, similar to this, except using pattern matching instead of prefix notation.

// Atom Parsers
anyAtom
cueAtom
 paint keyword
stringAtom
 paint string
booleanAtom
 enum true false
 paint constant.numeric
numberAtom
 paint constant.numeric

// Line Parsers
dugParser
 root
 description A demonstration prefix Language that compiles to JSON.
 inScope abstractValueParser
 catchAllParser errorParser
 javascript
  compile() {
   const res = super.compile()
   return JSON.stringify(JSON.parse(res), null, 2)
  }
abstractValueParser
 atoms cueAtom
 cueFromId
nullParser abstractValueParser
 compiler
  stringTemplate null
numberParser abstractValueParser
 atoms cueAtom numberAtom
 compiler
  stringTemplate {numberAtom}
stringParser abstractValueParser
 catchAllAtomType stringAtom
 compiler
  stringTemplate "{stringAtom}"
booleanParser abstractValueParser
 atoms cueAtom booleanAtom
 compiler
  stringTemplate {booleanAtom}
objectParser abstractValueParser
 catchAllParser memberParser
 compiler
  stringTemplate  
  joinSubparticlesWith , 
  openSubparticles {
  closeSubparticles }
arrayParser abstractValueParser
 inScope abstractValueParser
 compiler
  stringTemplate  
  joinSubparticlesWith , 
  openSubparticles [
  closeSubparticles ]
memberParser
 inScope abstractValueParser
 compiler
  stringTemplate "{stringAtom}" :
 atoms stringAtom
errorParser
 baseParser errorParser