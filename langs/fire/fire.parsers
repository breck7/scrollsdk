// todo Explore best ways to add polymorphism

// Atom Parsers
anyAtom
booleanAtom
 enum false true
filepathAtom
identifierAtom
 regex [$A-Za-z_][0-9a-zA-Z_$]*
 paint variable
 examples myVarA someVarB
numberAtom
 regex \-?[0-9]*\.?[0-9]*
 paint constant.numeric
numberIdentifierAtom
 extends identifierAtom
hashBangAtom
 paint comment
hashBangKeyatomAtom
 paint comment
stringAtom
 paint string
booleanIdentifierAtom
 extends identifierAtom
functionIdentifierAtom
 extends identifierAtom
identifiersAtom
 extends identifierAtom
instanceIdentifierAtom
 extends identifierAtom
methodIdentifierAtom
 extends identifierAtom
resultIdentifierAtom
 extends identifierAtom
keywordAtom
 paint keyword
stringIdentifierAtom
 extends identifierAtom
stringAtomsAtom
 extends stringAtom
leftNumberAtom
 extends numberAtom
leftAnyAtom
 extends anyAtom

// Line Parsers
fireParser
 root
 description A useless prefix Language that compiles to Javascript for testing Particles features.
 compilesTo js
 inScope hashbangParser abstractTerminalParser abstractNonTerminalParser
 catchAllParser errorParser
 javascript
  async execute() {
   let outputLines = []
   const _originalConsoleLog = console.log
   const tempConsoleLog = (...params) => outputLines.push(params)
   console.log = tempConsoleLog
   const compiled = this.compile("js")
   eval(compiled)
   console.log = _originalConsoleLog
   console.log(outputLines.join("\n"))
   return outputLines
  }
abstractNonTerminalParser
 inScope abstractTerminalParser abstractNonTerminalParser
 atoms keywordAtom
abstractJsblockParser
 compiler
  openSubparticles  {
  closeSubparticles }
 extends abstractNonTerminalParser
blockParser
 description block of code
 popularity .2
 compiler
  stringTemplate /* {identifierAtom} */
 extends abstractJsblockParser
 crux block
functionParser
 crux function
 description Function Assignment
 atoms keywordAtom functionIdentifierAtom
 catchAllAtomType anyAtom
 compiler
  stringTemplate const {functionIdentifierAtom} = ({anyAtom}) =>
  catchAllAtomDelimiter , 
 popularity .1
 extends abstractJsblockParser
ifParser
 crux if
 description If tile
 atoms keywordAtom identifierAtom
 popularity .2
 compiler
  stringTemplate if ({identifierAtom})
 extends abstractJsblockParser
whileParser
 crux while
 description While tile
 atoms keywordAtom identifierAtom
 popularity .1
 compiler
  stringTemplate while ({identifierAtom})
 extends abstractJsblockParser
abstractTerminalParser
 atoms keywordAtom
abstractAssignmentParser
 extends abstractTerminalParser
abstractArithmeticParser
 atoms keywordAtom identifierAtom
 catchAllAtomType anyAtom
 compiler
  stringTemplate const {identifierAtom} = {anyAtom}
 popularity .2
 extends abstractAssignmentParser
divideParser
 description Divide Numbers
 compiler
  catchAllAtomDelimiter  / 
 extends abstractArithmeticParser
 crux divide
moduloParser
 description Modulo Numbers
 compiler
  catchAllAtomDelimiter %
 extends abstractArithmeticParser
 crux modulo
multiplyParser
 description Multiply Numbers
 compiler
  catchAllAtomDelimiter  * 
 extends abstractArithmeticParser
 crux multiply
substractParser
 description Subtract Numbers
 compiler
  catchAllAtomDelimiter  - 
 extends abstractArithmeticParser
 crux substract
addParser
 crux add
 example
  add ten 2 3 5
 description Add numbers and store result
 compiler
  catchAllAtomDelimiter  + 
 extends abstractArithmeticParser
abstractBooleanOperatorParser
 description Runs a boolean test and saves result.
 extends abstractAssignmentParser
greaterThanParser
 description Greater than test
 atoms keywordAtom identifierAtom leftNumberAtom numberAtom
 compiler
  stringTemplate const {identifierAtom} = {leftNumberAtom} > {numberAtom}
 popularity .1
 extends abstractBooleanOperatorParser
 crux greaterThan
greaterThanOrEqualParser
 description Greater than or equal to test
 atoms keywordAtom identifierAtom leftNumberAtom numberAtom
 compiler
  stringTemplate const {identifierAtom} = {leftNumberAtom} >= {numberAtom}
 popularity .1
 extends abstractBooleanOperatorParser
 crux greaterThanOrEqual
lessThanParser
 description Less than test
 atoms keywordAtom identifierAtom leftAnyAtom anyAtom
 compiler
  stringTemplate const {identifierAtom} = {leftAnyAtom} < {anyAtom}
 popularity .1
 extends abstractBooleanOperatorParser
 crux lessThan
lessThanOrEqualParser
 crux lessThanOrEqual
 description Less than or equal to test
 atoms keywordAtom identifierAtom leftAnyAtom anyAtom
 compiler
  stringTemplate const {identifierAtom} = {leftAnyAtom} <= {anyAtom}
 popularity .1
 extends abstractBooleanOperatorParser
sumParser
 crux sum
 description Add numbers and store result
 atoms keywordAtom numberIdentifierAtom
 catchAllAtomType numberAtom
 compiler
  stringTemplate const {numberIdentifierAtom} = [{numberAtom}].reduce((sum, num) => sum + num)
  catchAllAtomDelimiter , 
 popularity .1
 extends abstractAssignmentParser
booleanParser
 crux boolean
 description Boolean Assignment
 atoms keywordAtom booleanIdentifierAtom booleanAtom
 compiler
  stringTemplate const {booleanIdentifierAtom} = {booleanAtom}
 extends abstractAssignmentParser
callFunctionAndSetParser
 crux callFunctionAndSet
 description Function Call
 popularity .5
 atoms keywordAtom resultIdentifierAtom functionIdentifierAtom
 catchAllAtomType anyAtom
 compiler
  stringTemplate const {resultIdentifierAtom} = {functionIdentifierAtom}({anyAtom})
  catchAllAtomDelimiter , 
 extends abstractAssignmentParser
callMethodAndSetParser
 crux callMethodAndSet
 description Method Call
 popularity .5
 atoms keywordAtom resultIdentifierAtom instanceIdentifierAtom methodIdentifierAtom
 catchAllAtomType anyAtom
 compiler
  stringTemplate const {resultIdentifierAtom} = {instanceIdentifierAtom}.{methodIdentifierAtom}({anyAtom})
  catchAllAtomDelimiter , 
 extends abstractAssignmentParser
joinParser
 crux join
 description Join strings to form new string
 atoms keywordAtom identifierAtom
 catchAllAtomType identifiersAtom
 compiler
  stringTemplate const {identifierAtom} = [{identifiersAtom}].join("")
  catchAllAtomDelimiter , 
 popularity .2
 extends abstractAssignmentParser
mutableNumberParser
 crux mutableNumber
 description Mutable Number Assignment
 atoms keywordAtom identifierAtom numberAtom
 compiler
  stringTemplate let {identifierAtom} = {numberAtom}
 extends abstractAssignmentParser
numberParser
 crux number
 description Number Assignment
 atoms keywordAtom identifierAtom numberAtom
 compiler
  stringTemplate const {identifierAtom} = {numberAtom}
 popularity .3
 extends abstractAssignmentParser
numbersParser
 crux numbers
 description Number Array Assignment
 atoms keywordAtom identifierAtom
 catchAllAtomType numberAtom
 popularity .4
 compiler
  stringTemplate const {identifierAtom} = [{numberAtom}]
  catchAllAtomDelimiter , 
 extends abstractAssignmentParser
stringParser
 crux string
 description String Assignment
 atoms keywordAtom stringIdentifierAtom
 catchAllAtomType anyAtom
 compiler
  stringTemplate const {stringIdentifierAtom} = "{anyAtom}"
 popularity .2
 extends abstractAssignmentParser
callFunctionParser
 crux callFunction
 description Function call ignore result.
 popularity .1
 atoms keywordAtom functionIdentifierAtom
 catchAllAtomType anyAtom
 compiler
  stringTemplate {functionIdentifierAtom}({anyAtom})
  catchAllAtomDelimiter , 
 extends abstractTerminalParser
decrementParser
 crux decrement
 description Decrement
 atoms keywordAtom numberIdentifierAtom
 compiler
  stringTemplate {numberIdentifierAtom}--
 popularity .1
 extends abstractTerminalParser
dumpIdentifierParser
 crux dumpIdentifier
 description Dump variable(s) to console
 catchAllAtomType identifierAtom
 compiler
  stringTemplate console.log({identifierAtom})
  catchAllAtomDelimiter , 
 popularity .5
 extends abstractTerminalParser
exportParser
 crux export
 description Export This
 atoms keywordAtom identifierAtom
 compiler
  stringTemplate module.exports = {identifierAtom}
 popularity .1
 extends abstractTerminalParser
incrementParser
 crux increment
 description Increment
 popularity .3
 atoms keywordAtom numberIdentifierAtom
 compiler
  stringTemplate {numberIdentifierAtom}++
 extends abstractTerminalParser
printNumberParser
 crux printNumber
 extends abstractTerminalParser
 catchAllAtomType numberIdentifierAtom
 compiler
  stringTemplate console.log({numberIdentifierAtom})
printStringParser
 crux printString
 // todo Allow printing of multiline strings
 extends abstractTerminalParser
 catchAllAtomType stringAtomsAtom
 compiler
  stringTemplate console.log("{stringAtoms}")
requireParser
 crux require
 description Require Something
 atoms keywordAtom identifierAtom filepathAtom
 compiler
  stringTemplate const {identifierAtom} = require("{filepathAtom}")
 popularity .1
 extends abstractTerminalParser
returnParser
 crux return
 atoms keywordAtom anyAtom
 compiler
  stringTemplate return {anyAtom}
 popularity .1
 extends abstractTerminalParser
hashbangParser
 crux #!
 description Standard bash hashbang line.
 catchAllAtomType hashBangAtom
 compiler
  stringTemplate // #! {hashBangAtom}
 atoms hashBangKeyatomAtom
errorParser
 baseParser errorParser
 compiler
  stringTemplate // error