// Cell Parsers
anyCell
keywordCell
commentKeywordCell
 extends keywordCell
 highlightScope comment
 enum comment
extraCell
 highlightScope invalid
cssValueCell
 highlightScope constant.numeric
selectorCell
 highlightScope keyword.control
 examples body h1
 // todo add html tags, css and ids selector regexes, etc
vendorPrefixPropertyKeywordCell
 description Properties like -moz-column-fill
 highlightScope variable.function
 extends keywordCell
propertyKeywordCell
 highlightScope variable.function
 extends keywordCell
 // todo Where are these coming from? Can we add a url link
 enum align-content align-items align-self all animation animation-delay animation-direction animation-duration animation-fill-mode animation-iteration-count animation-name animation-play-state animation-timing-function backface-visibility background background-attachment background-blend-mode background-clip background-color background-image background-origin background-position background-repeat background-size border border-bottom border-bottom-color border-bottom-left-radius border-bottom-right-radius border-bottom-style border-bottom-width border-collapse border-color border-image border-image-outset border-image-repeat border-image-slice border-image-source border-image-width border-left border-left-color border-left-style border-left-width border-radius border-right border-right-color border-right-style border-right-width border-spacing border-style border-top border-top-color border-top-left-radius border-top-right-radius border-top-style border-top-width border-width bottom box-shadow box-sizing break-inside caption-side clear clip color column-count column-fill column-gap column-rule column-rule-color column-rule-style column-rule-width column-span column-width columns content counter-increment counter-reset cursor direction display empty-cells fill filter flex flex-basis flex-direction flex-flow flex-grow flex-shrink flex-wrap float font @font-face font-family font-size font-size-adjust font-stretch font-style font-variant font-weight  hanging-punctuation height hyphens justify-content @keyframes left letter-spacing line-height list-style list-style-image list-style-position list-style-type margin margin-bottom margin-left margin-right margin-top max-height max-width @media min-height min-width nav-down nav-index nav-left nav-right nav-up opacity order outline outline-color outline-offset outline-style outline-width overflow overflow-x overflow-y padding padding-bottom padding-left padding-right padding-top page-break-after page-break-before page-break-inside perspective perspective-origin position quotes resize right tab-size table-layout text-align text-align-last text-decoration text-decoration-color text-decoration-line text-decoration-style text-indent text-justify text-overflow text-shadow text-transform top transform transform-origin transform-style transition transition-delay transition-duration transition-property transition-timing-function unicode-bidi vertical-align visibility white-space width word-break word-spacing word-wrap z-index overscroll-behavior-x user-select -ms-touch-action -webkit-user-select -webkit-touch-callout -moz-user-select touch-action -ms-user-select -khtml-user-select gap grid-auto-flow grid-column grid-column-end grid-column-gap grid-column-start grid-gap grid-row grid-row-end grid-row-gap grid-row-start grid-template-columns grid-template-rows justify-items justify-self
errorCell
 highlightScope invalid
commentCell
 highlightScope comment

// Line Parsers
hakonParser
 root
 // todo Add variables?
 description A prefix Tree Language that compiles to CSS
 compilesTo css
 inScope commentParser
 catchAllParser selectorParser
 javascript
  getSelector() {
   return ""
  }
  compile() {
   return this.topDownArray
    .filter(node => node.isSelectorParser)
    .map(child => child.compile())
    .join("")
  }
 example A basic example
  body
   font-size 12px
   h1,h2
    color red
  a
   &:hover
    color blue
    font-size 17px
propertyParser
 catchAllCellType cssValueCell
 catchAllParser errorParser
 javascript
  compile(spaces) {
   return `${spaces}${this.firstWord}: ${this.content};`
  }
 cells propertyKeywordCell
variableParser
 extends propertyParser
 pattern --
browserPrefixPropertyParser
 extends propertyParser
 pattern ^\-\w.+
 cells vendorPrefixPropertyKeywordCell
errorParser
 catchAllParser errorParser
 catchAllCellType errorCell
 baseParser errorParser
commentParser
 cells commentKeywordCell
 catchAllCellType commentCell
 catchAllParser commentParser
selectorParser
 inScope propertyParser variableParser commentParser
 catchAllParser selectorParser
 boolean isSelectorParser true
 javascript
  getSelector() {
   const parentSelector = this.parent.getSelector()
   return this.firstWord
    .split(",")
    .map(part => {
     if (part.startsWith("&")) return parentSelector + part.substr(1)
     return parentSelector ? parentSelector + " " + part : part
    })
    .join(",")
  }
  compile() {
   const propertyParsers = this.getChildren().filter(node => node.doesExtend("propertyParser"))
   if (!propertyParsers.length) return ""
   const spaces = "  "
   return `${this.getSelector()} {
  ${propertyParsers.map(child => child.compile(spaces)).join("\n")}
  }\n`
  }
 cells selectorCell