// Atom Parsers
floatAtom
commentAtom
 paint comment
cueAtom
hashBangKeywordAtom cueAtom
 paint comment
commentKeywordAtom cueAtom
 paint comment
 enum comment
errorAtom
 paint invalid
numberAtom floatAtom
 paint constant.numeric
numbersAtom numberAtom
operatorAtom
 paint keyword.operator.arithmetic

// Line Parsers
numbersParser
 root
 description A useless Language for testing Particles features.
 inScope abstractArithmeticReducerParser commentParser hashBangParser
 catchAllParser errorParser
 javascript
  execute() {
   return this.map(subparticle => subparticle.execute())
  }

abstractArithmeticReducerParser
 description First reduces any subparticle lists to one number and then reduces its own lists to one number using provided operator.
 javascript
  execute() {
   return this.numbersAtom.slice(1).reduce((curr, tot) => eval(`${curr}${this.operator}${tot}`), this.numbersAtom[0])
  }
 inScope abstractArithmeticReducerParser commentParser
 atoms operatorAtom
 catchAllAtomType numbersAtom

modParser abstractArithmeticReducerParser
 cue %
 string operator %
timesParser abstractArithmeticReducerParser
 cue *
 string operator *
addParser abstractArithmeticReducerParser
 cue +
 string operator +
substractParser abstractArithmeticReducerParser
 cue -
 string operator -
divideParser abstractArithmeticReducerParser
 cue /
 string operator /

commentParser
 description This is a line comment.
 catchAllAtomType commentAtom
 catchAllParser commentContentParser
 atoms commentKeywordAtom
commentContentParser
 catchAllAtomType commentAtom
 catchAllParser commentContentParser

hashBangParser
 cue #!
 atoms hashBangKeywordAtom
 catchAllAtomType commentAtom

errorParser
 catchAllAtomType errorAtom
 baseParser errorParser
 atoms errorAtom