// Atom Parsers
floatAtom
commentAtom
 paint comment
keywordAtom
hashBangKeywordAtom
 extends keywordAtom
 paint comment
commentKeywordAtom
 extends keywordAtom
 paint comment
 enum comment
errorAtom
 paint invalid
numberAtom
 paint constant.numeric
 extends floatAtom
numbersAtom
 extends numberAtom
operatorAtom
 paint keyword.operator.arithmetic

// Line Parsers
numbersParser
 root
 description A useless Language for testing Particles features.
 inScope abstractArithmeticReducerParser commentParser hashBangParser
 catchAllParser errorParser
 javascript
  execute() {
   return this.map(subparticle => subparticle.execute())
  }

abstractArithmeticReducerParser
 description First reduces any subparticle lists to one number and then reduces its own lists to one number using provided operator.
 javascript
  execute() {
   return this.numbersAtom.slice(1).reduce((curr, tot) => eval(`${curr}${this.operator}${tot}`), this.numbersAtom[0])
  }
 inScope abstractArithmeticReducerParser commentParser
 atoms operatorAtom
 catchAllAtomType numbersAtom

modParser
 crux %
 extends abstractArithmeticReducerParser
 string operator %
timesParser
 crux *
 extends abstractArithmeticReducerParser
 string operator *
addParser
 crux +
 extends abstractArithmeticReducerParser
 string operator +
substractParser
 crux -
 extends abstractArithmeticReducerParser
 string operator -
divideParser
 crux /
 extends abstractArithmeticReducerParser
 string operator /

commentParser
 description This is a line comment.
 catchAllAtomType commentAtom
 catchAllParser commentContentParser
 atoms commentKeywordAtom
commentContentParser
 catchAllAtomType commentAtom
 catchAllParser commentContentParser

hashBangParser
 crux #!
 atoms hashBangKeywordAtom
 catchAllAtomType commentAtom

errorParser
 catchAllAtomType errorAtom
 baseParser errorParser
 atoms errorAtom