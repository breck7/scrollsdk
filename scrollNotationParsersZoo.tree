keywordParsers
 description A parser where each node type is determined by the presence of a keyword
 prefixKeywordParsers
  keyword 1 2 3 foo
 postfixKeywordParsers
  1 2 keyword
 omnifixKeywordParsers
  1 keyword 2
flatParsers
 description A parser that has only 1 scope
 example
singleScopeParsers
 description A parser with multiple scopes
 benefit Isomorphic to a single table
 downsides
staticParsers
 description A parser where the parser and cellTypes cannot be changed or defined at runtime
 example
  print hello world
dynamicParsers
 description A parser where new parser and/or cellTypes can be defined at runtime
 example
  name score
  string int
  sandy 123
identifierParsers
 description A parser where identifiers can be created
 example
  score = 10
  increment score
anonymousParsers
 description A parser without any identifiers or naming
 example
  10
   increment
recursiveParsers
 description A parserNode with a scope that eventually includes itself
 example
  sum
   2 3
    sum
     4 6
dagParsers
 description A non recursive parser
 example
  person
   phone
    cell 123-1234
multiAnchorParserss
 description A parser where root level nodes (for instance) can be parsed/compiled/executed completely independently
singleAnchorParserss
 description A parser where parsing/compilation and/or execution must begin from the beginning of the sequence and process sequentially
orderIsImportantParserss
 example
  add 10
  checkBalance()
orderIsNotImportantParserss
 description When order is not important and rearranging nodes does not affect meaning. 
 example
  name ali
  score 100